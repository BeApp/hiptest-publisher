version: 2.1

commands:
  #############################################################################
  #                     Hiptest publisher CI jobs                             #
  #############################################################################

  build_and_test:
    description: "Build and run the tests"
    parameters:
      output_dir:
        type: string
        default: ""
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results/<< parameters.output_dir >>
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/<< parameters.output_dir >>/rspec.xml \
              --format progress \
              $TEST_FILES

      - store_test_results:
          path: /tmp/test-results/<< parameters.output_dir >>

  restore_bundler_cache:
    description: "Restore cached gems"
    steps:
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - v1-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - v1-gem-cache-{{ arch }}-{{ .Branch }}-
            - v1-gem-cache-{{ arch }}-

  install_hiptest_publisher:
    description: "Install Hiptest publisher"
    steps:
      - run:
          name: Install hiptest-publisher
          command: |
            bundle install
            bundle exec rake install

  regenerate_and_run_tests:
    description: "Regenerate tests with hiptest-publisher and run them"
    parameters:
      project_path:
        type: string
        default: ""
      config_file:
        type: string
        default: ""
      test_command:
        type: string
        default: "echo 'No test command provided'"
    steps:
      - checkout
      - restore_bundler_cache
      - install_hiptest_publisher
      - run:
          name: Generate tests
          command: |
            cd /hiptest-publisher-samples/hps/<< parameters.project_path >>
            hiptest-publisher -t $SECRET_TOKEN -c << parameters.config_file >> --without=actionwords
            << parameters.test_command >>

jobs:
  build-ruby-2_3:
    docker:
      - image: circleci/ruby:2.3.8

    working_directory: ~/repo
    steps:
      - build_and_test:
        output_dir: "2.3"

  build-ruby-2_4:
    docker:
      - image: circleci/ruby:2.4.5

    working_directory: ~/repo
    steps:
      - build_and_test:
        output_dir: "2.4"

  build-ruby-2_5:
    docker:
      - image: circleci/ruby:2.5.5

    working_directory: ~/repo
    steps:
      - build_and_test:
        output_dir: "2.5"

  build-ruby-2_6:
    docker:
      - image: circleci/ruby:2.6.2

    working_directory: ~/repo
    steps:
      - build_and_test:
        output_dir: "2.6"

  #############################################################################
  #                   Hiptest publisher samples jobs                          #
  #############################################################################

  install-hiptest-publisher:
    docker:
      - image: hiptest/hiptest-publisher-samples

    working_directory: ~/repo
    steps:
      - checkout
      - restore_bundler_cache
      - run:
          name: Install hiptest-publisher
          command: |
            bundle install && bundle clean --force
      - save_cache:
          paths:
            - ~/.bundle
          key: v1-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - install_hiptest_publisher

  hps-behat:
    docker:
      - image: hiptest/hiptest-publisher-samples
    working_directory: ~/repo

    steps:
      - regenerate_and_run_tests:
          project_path: "hps-behat"
          config_file: "behat.conf"
          test_command: "vendor/bin/behat"

  hps-behave:
    docker:
      - image: hiptest/hiptest-publisher-samples
    working_directory: ~/repo

    steps:
      - regenerate_and_run_tests:
          project_path: "hps-behave"
          config_file: "behave.conf"
          test_command: "behave"

  hps-cucumber-groovy:
    docker:
      - image: hiptest/hiptest-publisher-samples
    working_directory: ~/repo

    steps:
      - regenerate_and_run_tests:
          project_path: "hps-cucumber-groovy"
          config_file: "cucumber-groovy.conf"
          test_command: "mvn test"

  hps-cucumber-java:
    docker:
      - image: hiptest/hiptest-publisher-samples
    working_directory: ~/repo

    steps:
      - regenerate_and_run_tests:
          project_path: "hps-cucumber-java"
          config_file: "cucumber-java.conf"
          test_command: "mvn test"

  hps-groovy-spock:
    docker:
      - image: hiptest/hiptest-publisher-samples
    working_directory: ~/repo

    steps:
      - regenerate_and_run_tests:
          project_path: "hps-groovy-spock"
          config_file: "groovy-spock.conf"
          test_command: "mvn test"

  hps-java-junit:
    docker:
      - image: hiptest/hiptest-publisher-samples
    working_directory: ~/repo

    steps:
      - regenerate_and_run_tests:
          project_path: "hps-java-junit"
          config_file: "junit.conf"
          test_command: "mvn test"

  hps-java-testng:
    docker:
      - image: hiptest/hiptest-publisher-samples
    working_directory: ~/repo

    steps:
      - regenerate_and_run_tests:
          project_path: "hps-java-testng"
          config_file: "java-testng.conf"
          test_command: "mvn test"

  hps-python-unittest:
    docker:
      - image: hiptest/hiptest-publisher-samples
    working_directory: ~/repo

    steps:
      - regenerate_and_run_tests:
          project_path: "hps-python-unittest"
          config_file: "python-unittest.conf"
          test_command: "bin/test"

workflows:
  version: 2
  # build:
  #   jobs:
  #     - build-ruby-2_3
  #     - build-ruby-2_4
  #     - build-ruby-2_5
  #     - build-ruby-2_6

  run_samples:
    jobs:
      - install-hiptest-publisher
      - hps-behat:
          requires:
            - install-hiptest-publisher
      - hps-behave:
          requires:
            - install-hiptest-publisher
      - hps-python-unittest:
          requires:
            - install-hiptest-publisher
      - hps-cucumber-groovy:
          requires:
            - install-hiptest-publisher
      - hps-cucumber-java:
          requires:
            - install-hiptest-publisher
      - hps-groovy-spock:
          requires:
            - install-hiptest-publisher
      - hps-java-junit:
          requires:
            - install-hiptest-publisher
      - hps-java-testng:
          requires:
            - install-hiptest-publisher
